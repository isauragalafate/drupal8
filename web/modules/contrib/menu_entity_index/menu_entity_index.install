<?php

/**
 * @file
 * Hooks related to (un-)installation of Menu Entity Index module.
 */

use Drupal\Core\Database\Database;
use Drupal\Core\TypedData\TranslatableInterface;

/**
 * Implements hook_schema().
 */
function menu_entity_index_schema() {
  $schema['menu_entity_index'] = [
    'description' => 'Maintains an index of menu links and their referenced entities.',
    'fields' => [
      'menu_name' => [
        'description' => 'Menu name of host entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'level' => [
        'description' => 'Menu level of the host entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'entity_type' => [
        'description' => 'The entity type of the host entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'entity_subtype' => [
        'description' => 'The entity subtype of the host entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'entity_id' => [
        'description' => 'The entity id of the host entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'entity_uuid' => [
        'description' => 'The uuid of the host entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'parent_type' => [
        'description' => 'The entity type of the parent entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'parent_id' => [
        'description' => 'The entity id of the parent entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ],
      'parent_uuid' => [
        'description' => 'The uuid of the parent entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'langcode' => [
        'description' => 'The language code of the host entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
      'target_type' => [
        'description' => 'The entity type of the target entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'target_subtype' => [
        'description' => 'The entity subtype of the target entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'target_id' => [
        'description' => 'The entity id of the target entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'target_uuid' => [
        'description' => 'The uuid of the target entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'target_langcode' => [
        'description' => 'The language code of the target entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
    ],
    'primary key' => [
      'menu_name',
      'entity_uuid',
      'parent_uuid',
      'target_uuid',
      'langcode',
      'target_langcode',
    ],
    'indexes' => [
      'host_entity' => [
        'entity_type',
        'entity_subtype',
        'entity_id',
        'langcode',
      ],
      'target_entity' => [
        'target_type',
        'target_subtype',
        'target_id',
        'target_langcode',
      ],
      'target_id' => [
        'target_id',
      ],
      'target_type' => [
        'target_type',
      ],
      'target_langcode' => [
        'target_langcode',
      ],
    ],
  ];

  return $schema;
}

/**
 * Adds langcode fields to primary index of menu_entity_index database table.
 */
function menu_entity_index_update_8101() {
  $table = 'menu_entity_index';
  $index = 'PRIMARY';

  $schema = Database::getConnection()->schema();
  if ($schema) {
    if ($schema->tableExists($table)) {
      if ($schema->indexExists($table, $index)) {
        $schema->dropIndex($table, $index);
      }
      $schema->addPrimaryKey($table, [
        'menu_name',
        'entity_uuid',
        'parent_uuid',
        'target_uuid',
        'langcode',
        'target_langcode',
      ]);
    }
  }
}

/**
 * Updates parent_id field definition of menu_entity_index database table.
 */
function menu_entity_index_update_8102() {
  $table = 'menu_entity_index';
  $field = 'parent_id';
  $spec = [
    'description' => 'The entity id of the parent entity.',
    'type' => 'varchar',
    'length' => 128,
    'not null' => FALSE,
  ];

  $schema = Database::getConnection()->schema();
  if ($schema) {
    if ($schema->tableExists($table)) {
      if ($schema->fieldExists($table, $field)) {
        $schema->changeField($table, $field, $field, $spec);
      }
    }
  }
}

/**
 * Adds extra indexes to menu_entity_index table.
 */
function menu_entity_index_update_8103() {
  $table = 'menu_entity_index';
  $indexes = [
    'target_id' => ['target_id'],
    'target_type' => ['target_type'],
    'target_langcode' => ['target_langcode'],
  ];

  $schema = Database::getConnection()->schema();
  if (!$schema) {
    return;
  }

  if (!$schema->tableExists($table)) {
    return;
  }

  $table_schema = [
    'fields' => [
      'target_type' => [
        'description' => 'The entity type of the target entity.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ],
      'target_id' => [
        'description' => 'The entity id of the target entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'target_langcode' => [
        'description' => 'The language code of the target entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ],
    ],
    'indexes' => [
      'target_id' => [
        'target_id',
      ],
      'target_type' => [
        'target_type',
      ],
      'target_langcode' => [
        'target_langcode',
      ],
    ],
  ];
  foreach ($indexes as $index_name => $fields) {
    if (!$schema->indexExists($table, $index_name)) {
      $schema->addIndex($table, $index_name, $fields, $table_schema);
    }
  }
}

/**
 * Reinitializes menu entity index.
 */
function menu_entity_index_update_8104(&$sandbox) {
  $tracker = \Drupal::service('menu_entity_index.tracker');

  if (!isset($sandbox['menus'])) {
    $sandbox['menus'] = $tracker->getTrackedMenus();
  }

  if (empty($sandbox['menus'])) {
    return;
  }

  $entity_type_manager = \Drupal::service('entity_type.manager');
  $entity_query = \Drupal::service('entity.query');
  $batch_size = 10;

  $query = $entity_query->get('menu_link_content', 'OR');
  foreach ($sandbox['menus'] as $menu) {
    $query->condition('menu_name', $menu);
  }

  if (!isset($sandbox['max'])) {
    $database = \Drupal::service('database');
    $database->delete('menu_entity_index')
      ->condition('menu_name', (array) $sandbox['menus'], 'IN')
      ->execute();

    $count_query = clone $query;

    $sandbox['max'] = $count_query->count()->execute();
    $sandbox['progress'] = 0;
    $sandbox['offset'] = 0;
  }

  $entity_ids = $query->range($sandbox['offset'], $batch_size)->execute();

  $storage = $entity_type_manager->getStorage('menu_link_content');
  foreach ($storage->loadMultiple($entity_ids) as $entity_id => $entity) {
    if ($entity instanceof TranslatableInterface && $entity->isTranslatable()) {
      // Scan all languages of the entity.
      foreach ($entity->getTranslationLanguages() as $langcode => $language) {
        $tracker->updateEntity($entity->getTranslation($langcode));
      }
    }
    else {
      $tracker->updateEntity($entity);
    }
  }

  $sandbox['progress'] += count($entity_ids);
  $sandbox['offset'] = $sandbox['offset'] + $batch_size;
  if ($sandbox['progress'] < $sandbox['max']) {
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
  }
  else {
    $translation = \Drupal::service('string_translation');
    return $translation->translate('Completed scanning of menu links.');
  }
}
