<?php
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function entity_reference_formatter_theme() {
  return array(
    'entity_reference_formatter_settings_order' => array(
      'render element' => 'element',
      'function' => 'theme_entity_reference_formatter_settings_order',
    ),
  );
}

/**
 * Themes the formatter settings form.
 *
 * @param array $variables
 *   Theme variables.
 *
 * @return string
 *   Rendered HTML of the settings form part.
 */
function theme_entity_reference_formatter_settings_order($variables) {
  $element = $variables['element'];

  // Entity Reference Formatter order (tabledrag).
  $rows = array();
  foreach (Element::children($element, TRUE) as $name) {
    $element[$name]['weight']['#attributes']['class'][] = 'entity-reference-formatter-order-weight';
    $rows[] = array(
      'data' => array(
        drupal_render($element[$name]['label']),
        drupal_render($element[$name]['weight']),
      ),
      'class' => array('draggable'),
    );
  }

  $table = &$element[];

  $table = array(
    '#theme' => 'table',
    '#rows' => $rows,
    '#attributes' => array('id' => 'entity-reference-formatter-order'),
  );

  drupal_attach_tabledrag($table, array(
    'table_id' => 'entity-reference-formatter-order',
    'action' => 'order',
    'relationship' => 'sibling',
    'group' => 'entity-reference-formatter-order-weight'
  ));

  return drupal_render($element);
}

/**
 * Implements hook_entity_embed_display_plugins_alter().
 *
 * Do not allow the Entity Reference formatter to be used as an entity embed display
 * plugin.
 */
function entity_reference_formatter_entity_embed_display_plugins_alter(array &$plugins) {
  foreach ($plugins as $id => $plugin) {
    if (!empty($plugin['field_type']) && substr($id, -9) === ':fallback') {
      unset($plugins[$id]);
    }
  }
}
